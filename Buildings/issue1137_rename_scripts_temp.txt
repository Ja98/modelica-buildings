# variables to rename

for ff in `find . \( -name '*.mo' -or -name '*.mos' -or -name '*.py' -or -name '*.txt' -or -name '*.svg' \)`; do
    list=(\
# old_name new_name

# Some justifications behind suggested modifications:

# 1) if the model name indicates that the model calculates a value, I'd still prefer to 
# fully specify the G36 relevant properties of the value in the variable name. For example
# ZoneTemperatures: THeaSet -change to> TZonHeaSet. The goal would be to use the same
# variable name for the same physical/setpoint value throughout the G36 package, where possible. 

# 2)
#
# 

# in Buildings.Controls.OBC.ASHRAE.G36_PR1.TerminalUnits.SetPoints.ZoneTemperatures
    
     occCooSet occTDisSet \
     TCooSet TZonCooSet \ 
     THeaSet TZonHeaSet \ 
     TCooOnMax TZonCooSetMax \  
     TCooOnMin TZonCooSetMin \
     THeaOnMax TZonHeaSetMax \
     THeaOnMin TZonHeaSetMin \
     TCooWinOpe TZonCooSetWinOpe \
     THeaWinOpe TZonHeaSetWinOpe \ 

# in Buildings.Controls.OBC.ASHRAE.G36_PR1.TerminalUnits.Reheat.SetPoints.ActiveAirFlow

     \
     \
     \
     \
     \
     \
     \
     \
     \
     \
     \
     \
     \
     \
     \
    )

    for ((i=0; i<${#list[@]}; i+=2)); do
      sed -e s/${list[i]}/${list[i+1]}/g -i $ff
   done

done


# models to rename

import buildingspy.development.refactor as r

r.move_class("Buildings.Controls.OBC.ASHRAE.G36_PR1.AHUs.MultiZone",
             "Buildings.Controls.OBC.ASHRAE.G36_PR1.AHUs.MultiZoneVAV")

r.move_class("Buildings.Controls.OBC.ASHRAE.G36_PR1.AHUs.SingleZone",
             "Buildings.Controls.OBC.ASHRAE.G36_PR1.AHUs.SingleZoneVAV")


